{"ast":null,"code":"var _jsxFileName = \"/Users/asso/Desktop/assomatic/assomatic/Projects/28_React-Basic-Projects/15-cocktails/setup/src/components/CocktailList.js\";\nimport React from 'react';\nimport Cocktail from './Cocktail';\nimport Loading from './Loading';\nimport { useGlobalContext } from '../context';\n\nconst CocktailList = () => {\n  const {\n    cocktails,\n    loading\n  } = useGlobalContext();\n  console.log(cocktails);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (cocktails.length < 1) {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"section-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"cocktails\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cocktails-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, cocktails.map(item => {\n      return /*#__PURE__*/React.createElement(Cocktail, Object.assign({\n        key: item.id\n      }, item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }\n      }));\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"cocktail list component\"));\n};\n\nexport default CocktailList;","map":{"version":3,"sources":["/Users/asso/Desktop/assomatic/assomatic/Projects/28_React-Basic-Projects/15-cocktails/setup/src/components/CocktailList.js"],"names":["React","Cocktail","Loading","useGlobalContext","CocktailList","cocktails","loading","console","log","length","map","item","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAyBH,gBAAgB,EAA/C;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AAEA,MAAIC,OAAJ,EAAa;AACX,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAID,SAAS,CAACI,MAAV,GAAmB,CAAvB,EAA0B;AACxB,wBACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,SAAS,CAACK,GAAV,CAAeC,IAAD,IAAU;AACvB,0BAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACC;AAApB,SAA4BD,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAFA,CADH,CAFF,CADF;AAUD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF;AAKD,CAxBD;;AA0BA,eAAeP,YAAf","sourcesContent":["import React from 'react';\nimport Cocktail from './Cocktail';\nimport Loading from './Loading';\nimport { useGlobalContext } from '../context';\n\nconst CocktailList = () => {\n  const { cocktails, loading } = useGlobalContext();\n  console.log(cocktails);\n\n  if (loading) {\n    return <Loading />;\n  }\n  if (cocktails.length < 1) {\n    return (\n      <section className='section'>\n        <h2 className='section-title'>cocktails</h2>\n        <div className='cocktails-center'>\n          {cocktails.map((item) => {\n            return <Cocktail key={item.id} {...item} />;\n          })}\n        </div>\n      </section>\n    );\n  }\n  return (\n    <div>\n      <h2>cocktail list component</h2>\n    </div>\n  );\n};\n\nexport default CocktailList;\n"]},"metadata":{},"sourceType":"module"}